丁老师好。
我是信息与计算科学1班的孙毅阳，我做的项目是《Java五子棋人机对弈程序》
第2部分：项目功能演示 (约 3-4 分钟)
(视频画面：切换到运行中的游戏窗口，进行实际操作演示)
【讲解脚本】 “首先，我们来演示一下程序的基本功能。运行程序后，可以看到一个15x15大小的标准五子棋棋盘。玩家执黑子，电脑执白子，玩家先行。”
(操作：用鼠标在棋盘上点击，下一步黑子)
“当我作为玩家用鼠标点击棋盘上的任意空位时，程序会立即响应，一颗黑子就会落在对应的交叉点上。这之后，程序会自动切换到电脑的回合。”
(操作：等待电脑下出白子)
“大家可以看到，电脑（白子）在我下完后也马上落子了。目前电脑的AI非常初级，它采用的是随机算法，也就是在所有剩余的空位中，随机选择一个位置进行落子。现在我继续下几步...”
(操作：连续下棋，与电脑对弈，直到快要赢或已经赢了)
“这个程序的核心功能之一是实时胜负判断。在我或者电脑的每一步棋下完之后，程序都会立刻检查当前落子是否形成‘五连珠’。大家看，现在我只要在某个位置再下一颗子，就能连成五子...”
(操作：下出制胜的一步棋)
“下完这一步后，程序立刻弹出一个对话框，提示‘恭喜你，玩家赢了！’。点击确定后，游戏结束。此时，即使再点击棋盘，也不会有任何响应，保证了游戏的完整性。”


第3部分：核心代码与架构讲解 (约 5-8 分钟)
(视频画面：切换到你的VS Code，展示对应的代码文件)
【讲解脚本】 “接下来，我将为大家讲解这个程序的核心代码和设计思想。本项目主要采用了逻辑与视图分离的设计模式，这让代码结构更清晰，也更容易维护。”
1. 整体架构讲解 “整个项目由四个关键类组成。Run.java是程序的入口，负责启动程序。核心是GameLogic类和GameUI类。”
(画面：展示 GameLogic.java 文件) “GameLogic.java是我们的模型(Model)层，它不关心界面长什么样，只负责所有‘纯粹’的游戏规则。比如，这里用一个二维数组board来存储棋盘状态，定义了玩家和AI的常量，并且包含了处理下棋动作、AI决策（目前是随机）以及最重要的胜负判断的方法。”
(画面：展示 GameUI.java 文件) “GameUI.java是我们的视图(View)层。它继承自Swing的JPanel，所有我们看到的东西都在这里绘制。它本身不存储游戏的核心数据，而是通过持有一个GameLogic的引用，在需要的时候从GameLogic获取最新的棋盘状态来绘制。这样就实现了数据和显示的分离。”
2. 实时响应机制讲解 (画面：展示 GameUI.java 中的 addMouseListener 部分) “大家可能会好奇，程序是如何做到实时响应鼠标点击的。这里我们运用了Java Swing的事件驱动模型。在GameUI的构造方法中，我们添加了一个MouseListener。当用户点击鼠标时，mousePressed方法就会被自动调用。”
“在这个方法内部，我们首先将像素坐标转换为棋盘格子坐标，然后调用gameLogic.playerMove来更新游戏状态，最后调用repaint()方法。repaint()会通知Swing系统需要重绘界面，然后系统会自动调用我们的paintComponent方法，从而将更新后的棋盘和棋子画到屏幕上。整个过程非常高效，给用户的感觉就是实时的。”
3. 胜负判断算法讲解 (画面：展示 GameLogic.java 中的 checkWin 和 checkDirection 方法) “胜负判断是游戏的核心算法。为了提高效率，我没有在每次下棋后都去扫描整个棋盘。而是只对刚刚落下的这颗棋子进行判断。”
“checkWin方法会调用checkDirection四次，分别检查新落子的横向、纵向、右下斜向和右上斜向。在checkDirection方法中，程序会以新落子为中心，向正反两个方向延伸，计算同色棋子的数量，一旦发现总数达到或超过5，就立刻返回true，判断为胜利。这种方法避免了大量不必要的计算。”
第4部分：总结与反思 (约 1-2 分钟)
(视频画面：可以切回PPT的结束页)
【讲解脚本】 “通过本次五子棋项目的开发，我深入学习并实践了Java Swing的图形界面编程，特别是掌握了通过paintComponent进行自定义绘图，以及通过事件监听器来处理用户交互的核心机制。对我来说，最大的收获是理解了将程序逻辑与界面显示分离的重要性，这让我的代码变得更加有条理和可扩展。”
“当然，这个项目还有很多可以改进的地方，比如目前AI的随机算法非常弱，未来可以尝试引入评分估值函数或者Minimax博弈树算法来让电脑变得更聪明。但作为本学期学习的一次总结，我认为它很好地检验了我的学习成果。”
“我的讲解到此结束。谢谢老师的聆听！”


视频讲解继续用ai的，代码讲解先讲主程序
游戏逻辑这个主类中实现的主要功能是，初始化棋盘，玩家和机器人下棋，还有判断游戏胜负的主要逻辑。
初始化棋盘为一，当矩阵中某行某列变成1时代表玩家在这个地方下棋，为二是表示机器人在这个地方下棋。
游戏胜负的主要逻辑就是checkwith和checkdirection，

